{
  "name": "無人機介面",
  "icon": "pneumaticcraft:drone_interface",
  "category": "machines",
  "flag": "|mod:computercraft,mod:opencomputers",
  "advancement": "pneumaticcraft:printed_circuit_board",
  "pages": [
    {
      "type": "text",
      "text": "無人機介面是一個與$(l:tools/drone)無人機/$互動的 $(thing)ComputerCraft/OpenComputers 外設/$。要做到這一點，對$(item)無人機/$編入含有$(l:programming/computercraft)電腦控制/$拼圖的程序。當無人機執行該拼圖時，其將會試圖連接到給定區域內$(ttcolor)$(t:每個無人機介面只能同時與一個無人機連接)可用/$的$(item)無人機介面/$。"
    },
    {
      "text": "$(#800)abortAction()/$$(p)終止目前執行的操作。",
      "type": "text",
      "title": "abortAction()"
    },
    {
      "title": "addArea()",
      "text": "$(#800)addArea(<x>,<y>,<z>)/$|$(#800)addArea(<x1>,<y1>,<z1>,<x2>,<y2>,<z2>,<區域類型>)/$$(p)向無人機目前儲存的區域加入一個區域。當使用後一個重新載入時，x1,y1,z1 表示的是第一個點（代表手動加入時第一個定位工具），x1,y2,z2 表示第二個點。",
      "type": "text"
    },
    {
      "text": "$(#800)addBlacklistItemFilter(<物品/方塊名>, <損害值/元數據>, <使用元數據>, <使用NBT>, <使用礦物詞典>, <使用模組匹配>)/$$(p)和addWhitelistItemFilter(...)一樣，但加入的是黑名單。",
      "type": "text",
      "title": "addBlacklistItemFilter()"
    },
    {
      "text": "$(#800)addBlacklistLiquidFilter(<流體名>)/$$(p)和addWhitelistLiquidFilter(...)一樣，但加入的是黑名單。",
      "type": "text",
      "title": "addBlacklistLiquidFilter()"
    },
    {
      "title": "addBlacklistText()",
      "type": "text",
      "text": "$(#800)addBlacklistText(<文字>)/$$(p)向黑名單加入一個文字。例如：指定攻擊實體操作的過濾器。"
    },
    {
      "type": "text",
      "text": "$(#800)addWhitelistItemFilter(<物品/方塊名>, <損害值/元數據>, <使用元數據>, <使用NBT>, <使用礦物詞典>, <useModSimilarity>)/$$(p)作為連接在右側的$(l:programming/item_filter)物品過濾器/$。物品/方塊名使用 Minecraft 格式，如：\"minecraft:stone\"，或\"pneumaticcraft:pressureTube\"。『使用xxx』參數確定哪些過濾器會被使用的 bool 參數（和設定介面裡的複選框功能一樣）。",
      "title": "addWhitelistItemFilter()"
    },
    {
      "title": "addWhitelistLiquidFilter()",
      "text": "$(#800)addWhitelistLiquidFilter(<流體名>)/$$(p)作為連接在右側的$l(:programming/liquid_filter)流體過濾器/$。流體名可以是其『註冊名』，也可以是本地化的名稱。",
      "type": "text"
    },
    {
      "text": "$(#800)addWhitelistText(<文字>)/$$(p)向白名單文字加入一個文字。例如：指定攻擊實體操作的過濾器。",
      "type": "text",
      "title": "addWhitelistText()"
    },
    {
      "title": "clearArea()",
      "type": "text",
      "text": "$(#800)clearArea()/$$(p)清空目前儲存的區域。"
    },
    {
      "title": "clearBlacklistItemFilter()",
      "type": "text",
      "text": "$(#800)clearBlacklistItemFilter()/$$(p)清空黑名單記憶體儲的物品過濾器。"
    },
    {
      "title": "clearBlacklistLiquidFilter()",
      "text": "$(#800)clearBlacklistLiquidFilter()/$$(p)清空黑名單記憶體儲的流體過濾器。",
      "type": "text"
    },
    {
      "text": "$(#800)clearBlacklistText()/$$(p)清空黑名單記憶體儲的的文字。",
      "type": "text",
      "title": "clearBlacklistText()"
    },
    {
      "title": "clearWhitelistItemFilter()",
      "text": "$(#800)clearWhitelistItemFilter()/$$(p)清空白名單記憶體儲的物品過濾器。",
      "type": "text"
    },
    {
      "type": "text",
      "text": "$(#800)clearWhitelistLiquidFilter()/$$(p)清空白名單記憶體儲的流體過濾器。",
      "title": "clearWhitelistLiquidFilter()"
    },
    {
      "title": "clearWhitelistText()",
      "text": "$(#800)clearWhitelistText()/$$(p)清空白名單記憶體儲的文字。",
      "type": "text"
    },
    {
      "title": "evaluateCondition()",
      "text": "$(#800)evaluateCondition()/$$(p)返回 true/false。僅用於條件。將會取決於是否滿足條件返回 true/false。無人機條件可以在調用『setAction()』後即被檢查。注意：如果你要檢查的是非無人機條件，需要等到『isActionDone()』為 true。",
      "type": "text"
    },
    {
      "type": "text",
      "text": "$(#800)exitPiece()/$$(p)終止執行流所在的電腦控制拼圖，並使執行流進入下一拼圖。",
      "title": "exitPiece()"
    },
    {
      "text": "$(#800)forgetTarget()/$$(p)當無人機（在攻擊實體拼圖中）目標為一個實體，調用該方法將停止攻擊該實體。",
      "type": "text",
      "title": "forgetTarget()"
    },
    {
      "text": "$(#800)getAction()/$$(p)返回代表由『setAction()』所設定的上一個操作的字元串。如果未設定操作，返回 nil。可以用於確保只在該方法不返回 nil 時才調用『isActionDone()』。",
      "type": "text",
      "title": "getAction()"
    },
    {
      "title": "getAllActions()",
      "type": "text",
      "text": "$(#800)getAllActions()/$$(p)返回包含所有可以被選擇的操作（如 dig（挖掘方塊）或者 place（放置方塊））的字元串的列表。"
    },
    {
      "title": "getAreaTypes()",
      "text": "$(#800)getAreaTypes()/$$(p)返回所有可行的區域類型（如 filled（填充），frame（框架），sphere（球）等）。",
      "type": "text"
    },
    {
      "title": "getDronePosition()",
      "text": "$(#800)getDronePosition()/$$(p)返回包含有無人機的 x, y, z 坐標的 double 類型值的列表。",
      "type": "text"
    },
    {
      "text": "$(#800)getDronePressure()/$$(p)返回所連接的無人機的目前壓力。",
      "type": "text",
      "title": "getDronePressure()"
    },
    {
      "title": "getUpgrades()",
      "type": "text",
      "text": "$(#800)getUpgrades(<升級>)/$$(p)返回給定升級所安裝的數量。<升級>是一個數值索引（從 0 開始），按照其在創造物品欄 / NEI 中的順序。亦為該升級的元資料值。例如，速度升級的索引為 5。"
    },
    {
      "text": "$(#800)getVariable(<變數名>)/$$(p)返回無人機的對應變數的值（x,y,z）。同樣可以取得全局（#）和特定（$）變數的值。",
      "type": "text",
      "title": "getVariable()"
    },
    {
      "type": "text",
      "text": "$(#800)hideArea()/$$(p)停止預覽無人機所儲存的區域。",
      "title": "hideArea()"
    },
    {
      "title": "isActionDone()",
      "text": "$(#800)isActionDone()/$$(p)如果目前操作已完成（去往位置操作已到達目標位置，從容器提取物品操作無法輸入更多物品，挖掘方塊操作已經挖掘了所有方塊，等等），返回 true。",
      "type": "text"
    },
    {
      "text": "$(#800)isConnectedToDrone()/$$(p)如果一個無人機與該無人機介面連接（即無人機的程序執行到了電腦控制拼圖並且連接上了），返回 true。",
      "type": "text",
      "title": "isConnectedToDrone()"
    },
    {
      "title": "removeArea()",
      "text": "$(#800)removeArea(<x>,<y>,<z>)/$|$(#800)removeArea(<x1>,<y1>,<z1>,<x2>,<y2>,<z2>,<區域類型>)/$$(p)從目前儲存的區域裡刪除一個區域（即加入黑名單）。",
      "type": "text"
    },
    {
      "text": "$(#800)setAction(<操作>)/$$(p)設定要執行的操作。<操作>是表示該操作的字元串。該字元串應當屬於 getAllActions() 返回的列表。",
      "type": "text",
      "title": "setAction()"
    },
    {
      "title": "setBlockOrder()",
      "text": "$(#800)setBlockOrder(<\"closest\"/\"highToLow\"/\"lowToHigh\">)/$$(p)設定無人機挖掘/放置方塊的順序。",
      "type": "text"
    },
    {
      "text": "$(#800)setCount(<數量>)/$$(p)設定最大輸入/輸出/丟出物品限制，也是條件檢查時被檢查的物品數量。",
      "type": "text",
      "title": "setCount()"
    },
    {
      "title": "setCraftingGrid()",
      "type": "text",
      "text": "$(#800)setCraftingGrid(<物品/方塊名>, <物品/方塊名>, ...(9個))/$$(p)設定在執行合成指令時使用的合成表。需要指定合成配方的所有 9 個物品。對於空物品，使用 nil 代替。命名格式和提供物品過濾器的格式相同。"
    },
    {
      "text": "$(#800)setDropStraight(<true/false>)/$$(p)要執行丟出物品操作時，該方法指定物品會以一個隨機的速度丟出（false）還是豎直下落（true）。",
      "type": "text",
      "title": "setDropStraight()"
    },
    {
      "title": "setEmittingRedstone()",
      "text": "$(#800)setEmittingRedstone(<強度>)/$$(p)要執行發出紅石信號操作時，該方法指定無人機會被設定為的名字。",
      "type": "text"
    },
    {
      "type": "text",
      "text": "$(#800)setIsAndFunction(<true/false>)/$$(p)只在條件中使用。設定為 true 時，所有被檢查的方塊需要滿足條件（如 >= 10）。",
      "title": "setIsAndFunction()"
    },
    {
      "title": "setMaxActions()",
      "text": "$(#800)setMaxActions(<數量>)/$$(p)設定在指令被認為完成前在一個方塊上執行的最多操作限制。該方法僅對放置方塊，挖掘方塊，右擊方塊操作適用。確保調用了 setUseMaxActions(true) 以啟用這一控制。",
      "type": "text"
    },
    {
      "type": "text",
      "text": "$(#800)setOperator(<\">=\" / \"=\">)/$$(p)只在條件中使用。設定條件檢查相等於（\"=\"）或是大於等於（\">=\"）指定數量。這個數量可以用 setCount() 方法設定。",
      "title": "setOperator()"
    },
    {
      "title": "setPlaceFluidBlocks()",
      "type": "text",
      "text": "$(#800)setPlaceFluidBlocks(<true/false>)/$$(p)僅用於輸出流體操作。設定為 true 時無人機可以放置下流體方塊。"
    },
    {
      "title": "setRenameString()",
      "text": "$(#800)setRenameString(<名稱>)/$$(p)設定執行重新命名無人機操作時無人機將會被設定為的名稱。",
      "type": "text"
    },
    {
      "type": "text",
      "text": "$(#800)setRequiresTool(<true/false>)/$$(p)設定在執行挖掘方塊或收穫作物操作時無人機是否需要適用工具。",
      "title": "setRequiresTool()"
    },
    {
      "title": "setSide()",
      "text": "$(#800)setSide(<朝向>, <是否可存取>)/$$(p)設定方塊某一面可以被存取。用於從容器提取物品/向容器輸出物品操作中設定無人機可以從那一面存取容器。也用於放置操作中如何放置方塊。",
      "type": "text"
    },
    {
      "title": "setSides()",
      "text": "$(#800)setSides(<下>, <上>, <北>, <南>, <東>, <西>)/$$(p)與上一方法相同，但是一次性設定所有面（6 個 bool）",
      "type": "text"
    },
    {
      "type": "text",
      "text": "$(#800)setSignText(<行1>, <行2>, ..., <行N>)/$$(p)設定編輯告示牌操作將寫入的文字。",
      "title": "setSignText()"
    },
    {
      "title": "setSneaking()",
      "text": "$(#800)setSneaking(<true/false>)/$$(p)僅用於右擊方塊指令，設定右擊時是否潛行右擊。",
      "type": "text"
    },
    {
      "type": "text",
      "text": "$(#800)setUseCount(<true/false>)/$$(p)設定無人機是否有最大輸入/輸出/丟出物品限制。如果設定為 true，需要同時調用 setCount()。",
      "title": "setUseCount()"
    },
    {
      "title": "setUseMaxActions()",
      "type": "text",
      "text": "$(#800)setUseMaxActions(<true/false>)/$$(p)設定無人機是否有在指令被認為完成前對方塊執行的最多操作限制。對於放置方塊，挖掘方塊，右擊方塊適用。如果設定為 true，需要同時調用 setMaxActions()。"
    },
    {
      "text": "$(#800)setVariable(<變數名>, <true/false>)/$|$(#800)setVariable(<變數名>, <x>)/$|$(#800)setVariable(<變數名>, <x>, <y>, <z>)/$$(p)設定無人機的$(l:programming/coordinate_operator)變數/$。傳參為 true 時，坐標會被設為 (1,0,0)。傳參為 false 時，坐標會被設為 (0,0,0)。同樣可以用於設定全局變數（#）。",
      "type": "text",
      "title": "setVariable()"
    },
    {
      "text": "$(#800)showArea()/$$(p)使用你所習慣的區域渲染器顯示目前儲存的區域。",
      "type": "text",
      "title": "showArea()"
    },
    {
      "type": "crafting",
      "text": "無人機介面的合成表",
      "recipe": "pneumaticcraft:drone_interface"
    }
  ]
}